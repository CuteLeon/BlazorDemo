@page "/CovidCounter/{Area}"
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<div class="card border-@Theme mb-3 shadow" style="max-width: 18rem;">
    <div class="card-header"><a href="/CovidCounter/@Area" class="h3 text-@Theme">@Area</a></div>
    <div class="card-body text-@Theme">
        <h1 class="card-title text-center h1" style="cursor: pointer" @onclick="ClickLabel" @ondblclick="DoubleClickLabel">@(Count.HasValue ? Count.Value.ToString() : "--")</h1>
    </div>
</div>

@code {
    [Parameter]
    public string Area { get; set; }

    private int? count = null;

    public int? Count
    {
        get => count;
        set
        {
            count = value.HasValue ? Math.Max(0, value.Value) : value;
            this.Theme = GetTheme(count);
        }
    }

    public string Theme { get; set; } = "success";

    private string GetTheme(int? count) => count switch
    {
        null => "secondary",
        int c when c <= 200 => "success",
        int c when c < 10000 => "warning",
        _ => "danger",
    };

    private async Task ClickLabel()
    {
        var result = await this.JSRuntime.InvokeAsync<int>("sayHello", $"Greet from C# {nameof(IJSRuntime.InvokeAsync)}");
        this.Count = result;
        //if (this.Count.HasValue) this.Count++;
        //this.Logger.LogInformation(this.Count.ToString());
    }

    private void DoubleClickLabel()
    {
        navigationManager.NavigateTo($"/PublishCounter/{Area}");
    }
}
